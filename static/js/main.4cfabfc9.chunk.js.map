{"version":3,"sources":["components/square.js","components/board.js","components/game.js","index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","state","squares","Array","fill","xIsNext","xWin","oWin","i","handleClick","slice","winner","calculateWinner","winnerFound","setState","status","xWIn","renderSquare","resetScore","resetBoard","lines","length","a","b","c","Game","ReactDOM","render","document","getElementById"],"mappings":"0MAEaA,EAAb,uKACY,IAAD,OACP,OACE,4BAAQC,UAAU,SAASC,QAAS,kBAAM,EAAKC,MAAMD,YAClDE,KAAKD,MAAME,WAJpB,GAA4BC,IAAMC,WCCrBC,EAAb,kDACE,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,EACTC,KAAM,EACNC,KAAM,GANS,EADrB,yDAWeC,GAAI,IAAD,OACd,OACE,kBAAC,EAAD,CACEX,MAAOD,KAAKK,MAAMC,QAAQM,GAC1Bd,QAAS,kBAAM,EAAKe,YAAYD,QAfxC,kCAoBcA,GACV,IAAMN,EAAUN,KAAKK,MAAMC,QAAQQ,QAC/BC,EAASC,EAAgBV,GACzBW,GAAc,EACdF,GAAUT,EAAQM,KAGtBN,EAAQM,GAAKZ,KAAKK,MAAMI,QAAU,IAAM,IACxCM,EAASC,EAAgBV,IACpBW,GAAeF,IAClBE,GAAc,EACC,MAAXF,EAAgBf,KAAKkB,SAAS,CAAER,KAAMV,KAAKK,MAAMK,KAAO,IACxC,MAAXK,GAAgBf,KAAKkB,SAAS,CAAEP,KAAMX,KAAKK,MAAMM,KAAO,KAEnEX,KAAKkB,SAAS,CACZZ,QAASA,EACTG,SAAUT,KAAKK,MAAMI,aApC3B,mCAyCIT,KAAKkB,SAAS,CACZZ,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,MA3Cf,mCAgDIT,KAAKkB,SAAS,CACZZ,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,EACTC,KAAM,EACNC,KAAM,MApDZ,+BAwDY,IAEJQ,EAOAC,EAAMT,EATH,OACDI,EAASC,EAAgBhB,KAAKK,MAAMC,SAY1C,OATEa,EADEJ,EACO,WAAaA,EAEb,iBAAmBf,KAAKK,MAAMI,QAAU,IAAM,KAKzDW,EAAO,eAAiBpB,KAAKK,MAAMK,KACnCC,EAAO,eAAiBX,KAAKK,MAAMM,KAEjC,6BACE,yBAAKd,UAAU,UAAUsB,GACzB,yBAAKtB,UAAU,aACZG,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,IAErB,yBAAKxB,UAAU,aACZG,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,IAErB,yBAAKxB,UAAU,aACZG,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,GAClBrB,KAAKqB,aAAa,IAErB,yBAAKxB,UAAU,eACb,iCAAOuB,GACP,iCAAOT,IAET,yBAAKd,UAAU,aACb,4BAAQC,QAAS,kBAAM,EAAKwB,eAA5B,WACA,4BAAQxB,QAAS,kBAAM,EAAKyB,eAA5B,mBA7FV,GAA2BrB,IAAMC,WAoGjC,SAASa,EAAgBV,GAWvB,IAVA,IAAMkB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAItB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQoB,KAAOpB,EAAQsB,GACpE,OAAOtB,EAAQoB,GAGnB,OAAO,KCrHF,IAAMG,EAAb,uKAEI,OACE,6BACE,yBAAKhC,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,aANZ,GAA0BK,IAAMC,WCEhC2B,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U","file":"static/js/main.4cfabfc9.chunk.js","sourcesContent":["import React from \"react\";\n\nexport class Square extends React.Component {\n  render() {\n    return (\n      <button className=\"square\" onClick={() => this.props.onClick()}>\n        {this.props.value}\n      </button>\n    );\n  }\n}\n","import React from \"react\";\nimport { Square } from \"./square\";\n\nexport class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      xWin: 0,\n      oWin: 0,\n    };\n  }\n\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    let winner = calculateWinner(squares);\n    let winnerFound = false;\n    if (winner || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    winner = calculateWinner(squares);\n    if (!winnerFound && winner) {\n      winnerFound = true;\n      if (winner === \"X\") this.setState({ xWin: this.state.xWin + 1 });\n      else if (winner === \"O\") this.setState({ oWin: this.state.oWin + 1 });\n    }\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  resetBoard() {\n    this.setState({\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    });\n  }\n\n  resetScore() {\n    this.setState({\n      squares: Array(9).fill(null),\n      xIsNext: true,\n      xWin: 0,\n      oWin: 0,\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    let xWIn, oWin;\n\n    xWIn = \"X Winning : \" + this.state.xWin;\n    oWin = \"O Winning : \" + this.state.oWin;\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n        <div className=\"score-board\">\n          <div> {xWIn}</div>\n          <div> {oWin}</div>\n        </div>\n        <div className=\"game-info\">\n          <button onClick={() => this.resetScore()}> reset </button>\n          <button onClick={() => this.resetBoard()}> new game</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React from \"react\";\nimport { Board } from \"./board\";\n\nexport class Game extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport { Game } from \"./components/game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}